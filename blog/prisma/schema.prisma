datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
    previewFeatures = ["selectRelationCount"]

}

model Profile {
  id     Int     @default(autoincrement()) @id
  bio    String?
  //user   User?    @relation(fields: [userId], references: [id])
  userId Int?     @unique
}
model User {
  id      Int      @default(autoincrement()) @id
  email   String   @unique
  password String
  name    String?
  posts   Post[]
  createdAt DateTime @default(now())
  followedBy  User[]   @relation("UserFollows", references: [id])
  following   User[]   @relation("UserFollows", references: [id])
   likes         Like[]
  comments  Comment[]
  commentsToComments CommentToComment[]
}
model Post {
  id        Int      @default(autoincrement()) @id
  title     String
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  likes         Like[]
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id      Int      @default(autoincrement()) @id
  post      Post    @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Comment {
  id      Int      @default(autoincrement()) @id
  text     String
  post      Post    @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  commentsToComments CommentToComment[]

}
model CommentToComment {
  id      Int      @default(autoincrement()) @id
  text     String
  comment   Comment    @relation(fields: [commentId], references: [id])
  commentId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}
